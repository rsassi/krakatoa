        -:    0:Source:src/test1.cc
        -:    0:Programs:2
        -:    1:#include <string>
        -:    2:#include <iostream>
        -:    3:#include "test1.h"
        -:    4:#include <vector>
        -:    5:#include <cassert>
        -:    6:
        -:    7:const int MAXARGS = 4;
        -:    8:
        -:    9:
function _Z10lafonctionv called 0 returned 0% blocks executed 0%
    #####:   10:void lafonction(){
    #####:   11: std::cout <<"lafonction\n";
call    0 never executed
    #####:   12: int x = 1;
    #####:   13: int y = x +1;
        -:   14:  Inline xyz;
    #####:   15:  xyz.foo(true);
call    0 never executed
        -:   16:
    #####:   17:  unsigned int w =4;
    #####:   18:  w = xyz.bar(w);
call    0 never executed
    #####:   19:}
        -:   20:void lautrefonction();
        -:   21:void otherGetName(std::string& rpcTestNames);
        -:   22:
        -:   23:
function _Z7getNameRSs called 2 returned 100% blocks executed 100%
        2:   24:void getName(std::string& testNames) {
        2:   25:	size_t lineEnd = testNames.find_first_of("S", 0);
call    0 returned 100%
        2:   26:	if (lineEnd != std::string::npos){
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        2:   27:		std::cout << ".";
call    0 returned 100%
        -:   28:	}
        2:   29:}
        -:   30:
        -:   31:
function main called 1 returned 100% blocks executed 55%
        1:   32:int main( int argc, char* argv[] ) {
        1:   33:  std::string rpcTestNames = "Arm2 Dewarp VGA Single Bilinear Pad-0v0 ";
call    0 returned 100%
call    1 returned 100%
call    2 never executed
call    3 returned 100%
        -:   34:// get the arguments and store in vector:
        1:   35:assert( argc <= MAXARGS );
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        1:   36:assert( argc > 1 );
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        1:   37:std::vector<std::string> args( MAXARGS );
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 never executed
call    4 returned 100%
call    5 never executed
call    6 never executed
call    7 returned 100%
        1:   38:for (int i = 0; i < argc; i++) {
call    0 never executed
call    1 returned 100%
branch  2 taken 75%
branch  3 taken 25% (fallthrough)
        3:   39:  std::string s( argv[i] );
call    0 returned 100%
call    1 returned 100%
call    2 never executed
call    3 returned 100%
        3:   40:  args[i] = s;
call    0 returned 100%
call    1 returned 100%
        -:   41:}
        -:   42:/* iterates over
        -:   43:the arguments and tries to establish ?pair-wise
        -:   44:equality? or some such notion. The details are
        -:   45:not really relevant, but you can see that it checks
        -:   46:a pair of arguments first, printing a message if
        -:   47:they are equal. If they are not equal, it checks
        -:   48:for the string ?Hey!? instead and prints a differ-
        -:   49:*/
        1:   50:std::cout << "argc " << argc <<"\n";
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        3:   51:for (int i = 1; i <= argc-1; i++) {
branch  0 taken 67%
branch  1 taken 33% (fallthrough)
        2:   52:  std::cout << "args[i] = \""<<args[i]<<"\"\n";
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
        2:   53:  if (args[i] == args[i+1]) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
    #####:   54:    std::cout << "Two consecutive args are identical!" << std::endl;
call    0 never executed
call    1 never executed
    #####:   55:    getName(rpcTestNames);
call    0 never executed
    #####:   56:    getName(rpcTestNames);
call    0 never executed
    #####:   57:    getName(rpcTestNames);
call    0 never executed
    #####:   58:    getName(rpcTestNames);
call    0 never executed
    #####:   59:    lafonction();
call    0 never executed
        -:   60:  }
        2:   61:  else if ( args[i] == "XYZ" ) {
call    0 returned 100%
call    1 returned 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
    #####:   62:    std::cout << "One of the args is XYZ!" << std::endl;
call    0 never executed
call    1 never executed
    #####:   63:    lautrefonction();
call    0 never executed
    #####:   64:    otherGetName(rpcTestNames);
call    0 never executed
        -:   65:  }
        -:   66:  else {
        2:   67:    std::cout << "Args are different!" << std::endl;
call    0 returned 100%
call    1 returned 100%
        2:   68:    getName(rpcTestNames);
call    0 returned 100%
        -:   69:  }
        -:   70:}
        1:   71:return 0;
call    0 returned 100%
call    1 never executed
call    2 never executed
call    3 returned 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%
function _GLOBAL__I__Z10lafonctionv called 1 returned 100% blocks executed 100%
        3:   72:}
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
call    4 returned 100%
        -:   73:
        -:   74:
        -:   75:
